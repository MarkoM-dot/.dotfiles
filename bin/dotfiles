#!/bin/bash
set -e

EXE_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
REPO_DIR=$(dirname "$EXE_DIR")
SSH_DIR="$HOME/.ssh"

OS="`uname`"
case $OS in

    'Linux')
        if ! [ -x "$(command -v ansible)" ]; then
            printf "\n\nInstalling ansible...\n\n"
            sudo apt update -y
            sudo apt install software-properties-common -y
            sudo add-apt-repository --yes --update ppa:ansible/ansible
            sudo apt install -y ansible
        fi

        if ! [ -x "$(command -v stow)" ]; then
            printf "\n\nInstalling stow...\n\n"
            sudo apt install -y stow
        fi

        if ! [ -x "$(command -v git)" ]; then
            printf "\n\nInstalling git\n\n"
            sudo apt install -y git 
        fi;;


    'Darwin')
        if ! [ -x "$(command -v brew)" ]; then
            curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh
        fi

        if ! [ -x "$(command -v ansible)" ]; then
            brew install ansible
        fi

        if ! [ -x "$(command -v stow)" ]; then
            brew install stow
        fi
        
        if ! [ -x "$(command -v git)" ]; then
            brew install git 
        fi;;
    *)
        printf "Executable not configured for $OS"
        exit 1;;
esac

# generate an ssh key if nonexistent
if ! [[ -f "$SSH_DIR/id_rsa" ]]; then
    printf "\n\nGenerating ssh keys...\n\n"

    mkdir -p "$SSH_DIR"

    chmod 700 "$SSH_DIR"

    ssh-keygen -b 4096 -t rsa -f "$SSH_DIR/id_rsa" -N "" -C "USER@HOSTNAME"

    cat "$SSH_DIR/id_rsa.pub" >> "$SSH_DIR/authorized_keys"

    chmod 600 "$SSH_DIR/authorized_keys"
fi

printf "\n\nRun Ansible playbook...\n\n"
ansible-playbook "$REPO_DIR/main.yml" -i "$REPO_DIR/inventory" --ask-become-pass

printf "\n\nExecute Stow...\n\n"
stow .

printf "\n\nRestart Shell\n\n"
exec $SHELL
